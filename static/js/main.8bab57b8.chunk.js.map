{"version":3,"sources":["Components/StartScreen.js","Components/CharacterSelect.js","Components/Square.js","Components/Gameboard.js","Components/Score.js","App.js","index.js"],"names":["StartScreen","className","CharacterSelect","props","useState","choice","setChoice","useEffect","characters","map","character","index","htmlFor","onClick","bind","type","id","name","value","defaultChecked","submitChar","Square","class","pos","setCurrentID","Gameboard","style","backgroundImage","gameData","url","board","i","currentID","push","createBoard","Score","hits","misses","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","playing","setPlaying","games","setGames","loadingGames","setLoadingGames","gameLoaded","setGameLoaded","chosenGame","setChosenGame","setGameData","setHits","setMisses","setCharacters","won","setWon","setID","time","setTime","scores","setScores","scoreNames","setScoreNames","db","firestore","a","output","collection","orderBy","get","forEach","doc","querySnapshot","data","length","end","Date","now","then","start","highscores","window","prompt","sort","b","Object","keys","slice","update","names","score","values","availableGames","loadOptions","result","loadGame","val","uuid","v4","set","location","reload","console","log","positions","includes","filter","char","onChange","event","target","game","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bab57b8.chunk.js","sourcesContent":["// import react, { useState } from \"react\";\nimport \"./StartScreen.css\";\n\nfunction StartScreen() {\n  return (\n    <div className=\"StartScreen\">\n      <h1>Where's Waldo!</h1>\n      <h3>\n        Use the dropdown menu to select a picture, and press start to play a\n        game of Where's Waldo! You'll be provided with an image in which several\n        characters are hiding, and a list of them from which to choose. Once you\n        think you've found one, click on the area they're hiding in, select them\n        from the list, and click the Here's Waldo! button. If you made the right\n        choice, they'll be gone from the list of characters left to find. If you\n        manage to find all of them quickly enough, you may even end up on the\n        leaderboard!\n      </h3>\n    </div>\n  );\n}\n\nexport default StartScreen;\n","import react, { useEffect, useState } from \"react\";\n\nfunction CharacterSelect(props) {\n  const [choice, setChoice] = useState(\"\");\n\n  useEffect(() => [setChoice(props.characters[0])], [props]);\n\n  return (\n    <div className=\"CharacterSelect\">\n      {props.characters.map((character, index) => {\n        if (index === 0) {\n          return (\n            <div key={character}>\n              <label htmlFor={character}>{character}</label>\n              <input\n                onClick={setChoice.bind(null, character)}\n                type=\"radio\"\n                id={character}\n                name=\"character\"\n                value={character}\n                defaultChecked\n              />\n            </div>\n          );\n        } else {\n          return (\n            <div key={character}>\n              <label htmlFor={character}>{character}</label>\n              <input\n                onClick={setChoice.bind(null, character)}\n                type=\"radio\"\n                id={character}\n                name=\"character\"\n                value={character}\n              />\n            </div>\n          );\n        }\n      })}\n      <button type=\"button\" onClick={props.submitChar.bind(null, choice)}>\n        Here's Waldo!\n      </button>\n    </div>\n  );\n}\n\nexport default CharacterSelect;\n","import react, { useState } from \"react\";\nimport CharacterSelect from \"./CharacterSelect\";\nimport \"./Square.css\";\n\nfunction Square(props) {\n  return (\n    <div\n      className={props.class}\n      pos={props.pos}\n      onClick={props.setCurrentID.bind(null, props.pos)}\n    >\n      {/* <CharacterSelect /> */}\n    </div>\n  );\n}\n\nexport default Square;\n","// import react, { useState } from \"react\";\nimport Square from \"./Square\";\nimport \"./Gameboard.css\";\n\nfunction Gameboard(props) {\n  function createBoard() {\n    let board = [];\n    for (let i = 0; i < 50; i++) {\n      if (i !== props.currentID) {\n        board.push(\n          <Square\n            key={i}\n            pos={i}\n            class=\"Square\"\n            setCurrentID={props.setCurrentID}\n          />\n        );\n      } else {\n        board.push(\n          <Square\n            key={i}\n            pos={i}\n            class=\"Square Selected\"\n            setCurrentID={props.setCurrentID}\n          />\n        );\n      }\n    }\n    return board;\n  }\n\n  return (\n    <div id=\"gameContainer\">\n      <div\n        className=\"Gameboard\"\n        style={{ backgroundImage: `url(\"${props.gameData.url}\")` }}\n      >\n        {createBoard()}\n      </div>\n    </div>\n  );\n}\n\nexport default Gameboard;\n","// import react, { useState } from \"react\";\n\nfunction Score(props) {\n  return (\n    <div className=\"Score\">\n      <h2>Hits: {props.hits}</h2>\n      <h2>Misses: {props.misses}</h2>\n    </div>\n  );\n}\n\nexport default Score;\n","import react, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"./App.css\";\nimport StartScreen from \"./Components/StartScreen\";\nimport Gameboard from \"./Components/Gameboard\";\nimport Score from \"./Components/Score\";\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\nimport CharacterSelect from \"./Components/CharacterSelect\";\nimport uuid from \"uuid\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIZQJvndsGa2X-lEU-G7EtFA3llsyv0-s\",\n  authDomain: \"where-s-waldo-1b941.firebaseapp.com\",\n  projectId: \"where-s-waldo-1b941\",\n  storageBucket: \"where-s-waldo-1b941.appspot.com\",\n  messagingSenderId: \"380101538458\",\n  appId: \"1:380101538458:web:8bbac8988680d42e8e2523\",\n  measurementId: \"G-846PNCVGYC\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [playing, setPlaying] = useState(false);\n  const [games, setGames] = useState([]);\n  const [loadingGames, setLoadingGames] = useState(true);\n  const [gameLoaded, setGameLoaded] = useState(false);\n  const [chosenGame, setChosenGame] = useState(\"\");\n  const [gameData, setGameData] = useState({});\n  const [hits, setHits] = useState(0);\n  const [misses, setMisses] = useState(0);\n  const [currentID, setCurrentID] = useState(0);\n  const [characters, setCharacters] = useState(0);\n  const [won, setWon] = useState(false);\n  const [id, setID] = useState(\"\");\n  const [time, setTime] = useState();\n  const [scores, setScores] = useState([]);\n  const [scoreNames, setScoreNames] = useState([]);\n  const db = firebase.firestore();\n\n  async function loadOptions() {\n    let output = [];\n    let querySnapshot = await db.collection(\"games\").orderBy(\"id\", \"asc\").get();\n    querySnapshot.forEach((doc) => output.push(doc.id));\n    return output;\n  }\n\n  async function loadGame() {\n    let querySnapshot = await db.collection(\"games\").doc(chosenGame).get();\n    setGameData(querySnapshot.data());\n    setCharacters(querySnapshot.data().characters);\n  }\n\n  function chooseGame(event) {\n    setChosenGame(event.target.value);\n  }\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      setWon(true);\n      const end = Date.now();\n      db.collection(\"times\")\n        .doc(id)\n        .get()\n        .then((querySnapshot) => {\n          const start = querySnapshot.data().time;\n          setTime((end - start) / 1000);\n        });\n    }\n  }, [characters]);\n\n  useEffect(() => {\n    if (time != null) {\n      db.collection(\"games\")\n        .doc(chosenGame)\n        .get()\n        .then((querySnapshot) => {\n          let highscores = querySnapshot.data().highscores;\n          const name = window.prompt(\n            \"Enter your name so that we can save your score!\",\n            \"Waldo\"\n          );\n          highscores.push({ [time]: name });\n          highscores.sort((a, b) => {\n            return Object.keys(a)[0] - Object.keys(b)[0];\n          });\n          highscores = highscores.slice(0, 10);\n          db.collection(\"games\")\n            .doc(chosenGame)\n            .update({ highscores: highscores });\n          let names = [];\n          let scores = [];\n          highscores.forEach((score) => {\n            names.push(Object.values(score)[0]);\n            scores.push(Object.keys(score)[0]);\n          });\n          setScores(scores);\n          setScoreNames(names);\n        });\n    }\n  }, [time]);\n\n  useEffect(() => {\n    setLoadingGames(true);\n    let availableGames;\n    loadOptions().then((result) => {\n      availableGames = result;\n      setGames(availableGames);\n      setLoadingGames(false);\n      setChosenGame(availableGames[0]);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (playing) {\n      loadGame().then(() => {\n        setGameLoaded(true);\n        const start = Date.now();\n        const val = uuid.v4();\n        setID(val);\n        db.collection(\"times\").doc(val).set({ time: start });\n      });\n    }\n  }, [playing]);\n\n  function submitChar(choice) {\n    console.log(choice);\n    console.log(currentID);\n    console.log(gameData.positions[choice]);\n    if (gameData.positions[choice].includes(currentID)) {\n      setHits(hits + 1);\n      setCharacters(characters.filter((char) => char !== choice));\n    } else {\n      setMisses(misses + 1);\n    }\n  }\n\n  if (playing && gameLoaded) {\n    if (!won) {\n      return (\n        <div id=\"game\">\n          <Gameboard\n            gameData={gameData}\n            setCurrentID={setCurrentID}\n            currentID={currentID}\n          />\n          <div id=\"gameInfo\">\n            <Score hits={hits} misses={misses} />\n            <button type=\"button\" onClick={setPlaying.bind(null, false)}>\n              Stop\n            </button>\n            <CharacterSelect characters={characters} submitChar={submitChar} />\n          </div>\n        </div>\n      );\n    } else {\n      if (time != null) {\n        return (\n          <div id=\"gameWon\">\n            <div>You've won!! You did it it {time} seconds</div>\n            <ol>\n              {scoreNames.map((name, index) => {\n                return (\n                  <li>\n                    {name}: {scores[index]} seconds\n                  </li>\n                );\n              })}\n            </ol>\n            <button type=\"button\" onClick={() => window.location.reload()}>\n              Play again\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div id=\"gameWon\">You've won!! You did it it {time} seconds</div>\n        );\n      }\n    }\n  } else {\n    if (loadingGames) {\n      return (\n        <div id=\"start\">\n          <StartScreen />\n          <h2>Loading Games</h2>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div id=\"start\">\n            <StartScreen />\n            <select\n              name=\"gameSelection\"\n              id=\"gameSelection\"\n              onChange={chooseGame}\n            >\n              {games.map((game) => {\n                return (\n                  <option value={game} key={game}>\n                    {game}\n                  </option>\n                );\n              })}\n            </select>\n            <br></br>\n            <button type=\"button\" onClick={setPlaying.bind(null, true)}>\n              Start\n            </button>\n          </div>\n          <footer>\n            <a href=\"https://github.com/mazqt/Where-is-Waldo\">Github Repo</a>\n          </footer>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}